images {
   image: "frame_bg.png" COMP;
   image: "setting_icon.png" COMP;
   image: "icon_folder.png" COMP;
   image: "brows_logo.png" COMP;
}

group { "setting_layout";
   parts {
      rect { "clipper";
         desc { "default";
            color: 127 127 127 127;
         }
         desc { "show";
            color: 255 255 255 255;
         }
      }
      rect { "bg";
         clip_to: "clipper";
         desc { "default";
            color: 0 0 0 175;
         }
      }
      image { "base_frame_img";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            min: 650 435;
            max: 600 435;
            fixed: 1 1;
            image.normal: "frame_bg.png";
            image.border: 10 10 10 10;
            image.border_scale: 1;
         }
      }
      image { "shine_img";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            rel1 { to: "base_frame_img"; relative: 0 0; }
            rel2 { to: "base_frame_img"; relative: 1 0; }
            align: 0.5 0;
            min: 650 3;
            fixed: 1 1;
            image.normal: "shine.png";
         }
      }
      spacer { "base_frame";
         desc { "default";
            rel1 {to: "base_frame_img"; offset: 10 10;}
            rel2 {to: "base_frame_img"; offset: -11 -11;}
         }
      }
      rect { "title_frame";
         clip_to: "clipper";
         scale: 1;
         desc { "default";
            rel1 { to: "base_frame"; relative: 0 0; }
            rel2 { to: "base_frame"; relative: 1 0; }
            align: 0.5 0;
            min: 0 23;
            fixed: 0 1;
            color: 0 0 0 255;
         }
      }
      image { "title_icon";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            image.normal: "setting_icon.png";
         }
      }
      text { "title_name";
         scale: 1;
         clip_to: "clipper";
         effect: GLOW;
         desc { "default";
            rel1.to: "title_frame";
            rel2.to: "title_frame";
            align: 0.5 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Settings";
               size: 12;
               align: 0.5 0.5;
               min: 1 0;
               ellipsis: -1;
            }
            color: COL_HI;
         }
      }
      swallow { "elm.swallow.toolbar";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            min: 0 25;
            max: -1 25;
            align: 0.5 0.0;
            fixed: 0 1;
            rel1 {to: "title_frame"; relative: 0.0 1.0; offset: 0 5;}
            rel2.to: "title_frame";
         }
      }
      swallow { "elm.swallow.content";
         scale: 1;
         clip_to: "clipper";
         desc { "default";
            rel1 {
               to: "elm.swallow.toolbar";
               relative: 0.0 1.0;
            }
            rel2 {
               to_x: "base_frame";
               to_y: "elm.swallow.reset_btn";
               relative: 1.0 0.0;
               offset: -1 -11;
            }
         }
      }
      swallow { "elm.swallow.apply_btn";
         scale: 1;
         desc { "default";
            align: 1 0.5;
            min: 50 25;
            fixed: 1 1;
            rel1.to: "elm.swallow.reset_btn";
            rel1.relative: 0 0;
            rel2.to: "elm.swallow.reset_btn";
            rel2.relative: 0 1;
         }
      }
      swallow { "elm.swallow.reset_btn";
         scale: 1;
         desc { "default";
            align: 0.5 1;
            min: 50 25;
            fixed: 1 1;
            rel1.to: "base_frame";
            rel1.relative: 0.5 1;
            rel2.to: "base_frame";
            rel2.relative: 0.5 1;
         }
      }
      swallow { "elm.swallow.cancel_btn";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 50 25;
            fixed: 1 1;
            rel1.to: "elm.swallow.reset_btn";
            rel1.relative: 1 0;
            rel2.to: "elm.swallow.reset_btn";
            rel2.relative: 1 1;
         }
      }
      rect { "event_blocker";
         desc { "default";
            color: 0 0 0 0;
            visible: 1;
         }
         desc { "hide";
            inherit: "default";
            visible: 0;
         }
      }
      image { "over_img";
         scale: 1;
         clip_to: "clipper";
         nomouse;
         desc { "default";
            rel1 { to: "base_frame_img"; }
            rel2 { to: "base_frame_img"; }
            image.normal: "bub_over_bot.png";
         }
      }
   }
   programs {
      program { "load";
         signal: "load";
         action: STATE_SET "show";
         transition: "DECELERATE" 1.0;
         target: "clipper";
         after: "event_blocker_hide";
      }
      program { "dismiss";
         signal: "elm,state,dismiss";
         source: "";
         action: STATE_SET "default";
         target: "clipper";
         target: "event_blocker";
         after: "dismiss_done";
      }
      program { "event_blocker_hide";
         signal: "elm,state,event_blocker,hide";
         source: "";
         action: STATE_SET "hide";
         target: "event_blocker";
      }
      program { "dismiss_done";
         action: SIGNAL_EMIT "elm,state,dismiss,done" "";
      }
   }
}

group { "build_setting_layout";
   parts {
      spacer { "main_edc_frame";
         desc { "default";
            rel1 { relative: 0 0; }
            rel2 { relative: 1 0; }
            align: 0.5 0;
            min: 0 30;
            fixed: 0 1;
         }
      }
      spacer { "img_path_frame";
         desc { "default";
            rel1 { to: "main_edc_frame"; relative: 0 1; }
            rel2 { to: "main_edc_frame"; relative: 1 1; }
            align: 0.5 0;
            min: 0 30;
            fixed: 0 1;
         }
      }
      spacer { "snd_path_frame";
         scale: 1;
         desc { "default";
            rel1 { to: "img_path_frame"; relative: 0 1; }
            rel2 { to: "img_path_frame"; relative: 1 1; }
            align: 0.5 0;
            min: 0 30;
            fixed: 0 1;
         }
      }
      spacer { "fnt_path_frame";
         scale: 1;
         desc { "default";
            rel1 { to: "snd_path_frame"; relative: 0 1; }
            rel2 { to: "snd_path_frame"; relative: 1 1; }
            align: 0.5 0;
            min: 0 30;
            fixed: 0 1;
         }
      }
      spacer { "dat_path_frame";
         scale: 1;
         desc { "default";
            rel1 { to: "fnt_path_frame"; relative: 0 1; }
            rel2 { to: "fnt_path_frame"; relative: 1 1; }
            align: 0.5 0;
            min: 0 30;
            fixed: 0 1;
         }
      }
      spacer { "preference_frame";
         scale: 1;
         desc { "default";
            rel1 { to: "dat_path_frame"; relative: 0 1; offset: 0 5; }
            rel2 { to: "dat_path_frame"; relative: 1 1; }
            align: 0.5 0;
            min: 0 140;
            fixed: 0 1;
         }
      }
      image { "main_edc_icon";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "main_edc_frame";
            rel2.to: "main_edc_frame";
            image.normal: "brows_logo.png";
         }
      }
      text { "main_edc_guide";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { "default";
            rel1 { to: "main_edc_icon"; relative: 1 0; offset: 5 1; }
            rel2 { to: "main_edc_icon"; relative: 1 1; }
            color: COL_NM;
            align: 0 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Main EDC File:";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.main_edc_entry";
         scale: 1;
         desc { "default";
            align: 0 0;
            fixed: 1 1;
            rel1.to_x: "main_edc_guide";
            rel1.to_y: "main_edc_guide";
            rel1.offset: 5 0;
            rel1.relative: 1 0;
            rel2.to: "main_edc_frame";
         }
      }
      swallow { "main_edc_tooltip";
         repeat_events: 1;
         desc { "default";
            rel1.to: "main_edc_frame";
            rel2.to: "main_edc_frame";
            fixed: 1 1;
         }
      }
      image { "img_path_icon";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "img_path_frame";
            rel2.to: "img_path_frame";
            image.normal: "icon_folder.png";
         }
      }
      text { "img_path_guide";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { "default";
            rel1 { to: "img_path_icon"; relative: 1 0; offset: 5 1; }
            rel2 { to: "img_path_icon"; relative: 1 1; }
            color: COL_NM;
            align: 0 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Image Paths:";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.img_path_entry";
         scale: 1;
         desc { "default";
            align: 0 0;
            fixed: 1 1;
            rel1.to_x: "img_path_guide";
            rel1.to_y: "img_path_guide";
            rel1.offset: 5 0;
            rel1.relative: 1 0;
            rel2.to: "img_path_frame";
         }
      }
      swallow { "img_path_tooltip";
         repeat_events: 1;
         desc { "default";
            rel1.to: "img_path_frame";
            rel2.to: "img_path_frame";
            fixed: 1 1;
         }
      }
      image { "snd_path_icon";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "snd_path_frame";
            rel2.to: "snd_path_frame";
            image.normal: "icon_folder.png";
         }
      }
      text { "snd_path_guide";
         effect: SHADOW BOTTOM;
         scale: 1;
         desc { "default";
            rel1 { to: "snd_path_icon"; relative: 1 0; offset: 5 1; }
            rel2 { to: "snd_path_icon"; relative: 1 1; }
            color: COL_NM;
            align: 0 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Sound Paths:";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.snd_path_entry";
         scale: 1;
         desc { "default";
            align: 0 0;
            fixed: 1 1;
            rel1.to_x: "snd_path_guide";
            rel1.to_y: "snd_path_guide";
            rel1.offset: 5 0;
            rel1.relative: 1 0;
            rel2.to: "snd_path_frame";
         }
      }
      swallow { "snd_path_tooltip";
         repeat_events: 1;
         desc { "default";
            rel1.to: "snd_path_frame";
            rel2.to: "snd_path_frame";
            fixed: 1 1;
         }
      }
      image { "fnt_path_icon";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "fnt_path_frame";
            rel2.to: "fnt_path_frame";
            image.normal: "icon_folder.png";
         }
      }
      text { "fnt_path_guide";
         effect: SHADOW BOTTOM;
         scale: 1;
         desc { "default";
            rel1 { to: "fnt_path_icon"; relative: 1 0; offset: 5 1; }
            rel2 { to: "fnt_path_icon"; relative: 1 1; }
            color: COL_NM;
            align: 0 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Font Paths:";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.fnt_path_entry";
         scale: 1;
         desc { "default";
            align: 0 0;
            fixed: 1 1;
            rel1.to_x: "fnt_path_guide";
            rel1.to_y: "fnt_path_guide";
            rel1.offset: 17 0;
            rel1.relative: 1 0;
            rel2.to: "fnt_path_frame";
         }
      }
      swallow { "fnt_path_tooltip";
         repeat_events: 1;
         desc { "default";
            rel1.to: "fnt_path_frame";
            rel2.to: "fnt_path_frame";
            fixed: 1 1;
         }
      }
      image { "dat_path_icon";
         scale: 1;
         desc { "default";
            align: 0 0.5;
            min: 20 20;
            max: 20 20;
            fixed: 1 1;
            rel1.to: "dat_path_frame";
            rel2.to: "dat_path_frame";
            image.normal: "icon_folder.png";
         }
      }
      text { "dat_path_guide";
         effect: SHADOW BOTTOM;
         scale: 1;
         desc { "default";
            rel1 { to: "dat_path_icon"; relative: 1 0; offset: 5 1; }
            rel2 { to: "dat_path_icon"; relative: 1 1; }
            color: COL_NM;
            align: 0 0.5;
            fixed: 1 1;
            text {
               font: FN;
               text: "Data Paths:";
               size: 11;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      swallow { "elm.swallow.dat_path_entry";
         scale: 1;
         desc { "default";
            align: 0 0;
            fixed: 1 1;
            rel1.to_x: "dat_path_guide";
            rel1.to_y: "dat_path_guide";
            rel1.offset: 14 0;
            rel1.relative: 1 0;
            rel2.to: "dat_path_frame";
         }
      }
      swallow { "data_path_tooltip";
         repeat_events: 1;
         desc { "default";
            rel1.to: "dat_path_frame";
            rel2.to: "dat_path_frame";
            fixed: 1 1;
         }
      }
   }
}

group { "text_setting_layout";
   parts {
      spacer { "preference_frame";
         scale: 1;
         desc { "default";
            rel1.relative: 0 0;
            rel2.relative: 1 0;
            rel1.offset: 0 3;
            align: 0.5 0;
            min: 0 24;
            fixed: 0 1;
         }
      }
      text { "text_font_size";
         scale: 1;
         desc { "default";
            rel1.to: "preference_frame";
            rel2 { to: "preference_frame"; relative: 0.0 1.0; }
            rel1.offset: 2 0;
            min: 50 20;
            fixed: 1 1;
            align: 0.0 0.5;
            color: COL_NM;
            text {
               text: "Font Size";
               size: 10;
               font: FN;
               align: 0.0 0.5;
            }
         }
      }
      swallow { "elm.swallow.font_size";
         scale: 1;
         desc { "default";
            align: 0.0 0.5;
            rel1 { to: "text_font_size"; relative: 1.0 0.0; }
            rel2 { to_x: "preference_frame"; to_y: "text_font_size"; }
         }
      }
      spacer { "padding1";
         desc {
            rel1 { to_y: "preference_frame"; relative: 0 1; }
            rel2 { to_y: "preference_frame"; }
            align: 0.5 0;
            min: 0 5;
            fixed: 0 1;
         }
      }
      text { "text_setting_guide";
         scale: 1;
         effect: SHADOW BOTTOM;
         desc { "default";
            rel1 { to: "padding1"; relative: 0 1; offset: 2 0; }
            rel2 { to: "padding1"; relative: 0.65 1; }
            color: COL_NM;
            min: 0 20;
            align: 0.5 0;
            fixed: 0 1;
            text {
               font: FN;
               text: "Double click a keyword to change its color :";
               size: 10;
               align: 0 0.5;
               min: 1 0;
               ellipsis: -1;
            }
         }
      }
      spacer { "text_setting_frame";
         scale: 1;
         desc { "default";
            rel1 { to_y: "text_setting_guide"; relative: 0 1; }
            rel2 { to_x: "text_setting_guide"; }
         }
      }
      swallow { "elm.swallow.text_setting";
         scale: 1;
         desc { "default";
            fixed: 0 1;
            rel1.to: "text_setting_frame";
            rel2.to: "text_setting_frame";
         }
      }
      spacer { "padding2";
         desc { "default";
            rel1 { to: "text_setting_guide"; relative: 1 0; }
            rel2 { to: "text_setting_frame"; }
            align: 0 0.5;
            min: 10 0;
            fixed: 1 0;
         }
      }
      spacer { "font_frame";
         scale: 1;
         desc { "default";
            rel1 { to: "padding2"; relative: 1 0; }
         }
      }
      swallow { "elm.swallow.font";
         scale: 1;
         desc { "default";
            rel1.to: "font_frame";
            rel2.to: "font_frame";
         }
      }

   }
}
