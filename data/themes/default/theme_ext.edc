#define DARK_GREY_BG_COLOR 48 48 48 255
#define ASPECT_FILL(_ASPECT) \
   aspect: _ASPECT _ASPECT; aspect_preference: NONE;
#define TILED_PATTERN(_WIDTH, _HEIGHT) \
   fill { size { relative: 0.0 0.0; offset: _WIDTH _HEIGHT; } }
#define TILED_HORIZ(_WIDTH) \
   fill { size { relative: 0.0 1.0; offset: _WIDTH 0; } }
#define FIXED_SIZE(_WIDTH, _HEIGHT) \
   min: _WIDTH _HEIGHT; max: _WIDTH _HEIGHT; fixed: 1 1;
#define PANEMIN 10
#define PANEMIN2 16
#define PANEWID 32

#define ENABLED_TEXTBLOCK_TAGS                            \
   tag: "hilight" "+ style=glow glow_color=#3388ddaa";    \
   tag: "error" "+ underline=single underline_color=#ff0000 underline2_color=#ff0000"; \

#define DISABLED_TEXTBLOCK_TAGS                           \
   tag: "hilight" "+ style=glow glow_color=#3399ff20";    \
   tag: "error" "+ underline=single underline_color=#ff0000 underline2_color=#ff0000"; \


//List
#define ODD(_NAME, _SRC) \
   group { name: _NAME; \
      inherit: _SRC; \
      parts { \
         part { name: "base"; \
            description { state: "default" 0.0; \
               color: 56 56 56 255; \
               color_class: "list_item_base_odd"; \
            } \
         } \
      } \
   }
#define COMPRESS(_NAME, _SRC) \
   group { name: _NAME; \
      inherit: _SRC; \
      parts { \
         part { name: "elm.text"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
         part { name: "label2"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
         part { name: "label3"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
      } \
   }
#define COMPRESS_ODD(_NAME, _SRC) \
   group { name: _NAME; \
      inherit: _SRC; \
      parts { \
         part { name: "elm.text"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
         part { name: "label2"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
         part { name: "label3"; \
            description { state: "default" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "selected" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
            description { state: "disabled" 0.0; \
               text.min: 0 1; \
               text.ellipsis: 0.0; \
            } \
         } \
         part { name: "base"; \
            description { state: "default" 0.0; \
               color: 56 56 56 255; \
               color_class: "list_item_base_odd"; \
            } \
         } \
      } \
   }

group { name: "elm/list/h_item/enventor";
   data.item: "selectraise" "on";
   data.item: "focusraise" "on";
   images.image: "bevel_curved_vert_out.png" COMP;
   images.image: "shadow_rounded_vert.png" COMP;
   images.image: "vgrad_med_dark.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "shine.png" COMP;
   images.image: "brows_logo.png" COMP;
   parts {
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color: 64 64 64 255;
            color_class: "list_item_base";
         }
         description { state: "odd";
            color: 56 56 56 255;
            color_class: "list_item_base_odd";
         }
      }
      program {
         signal: "elm,state,odd"; source: "elm";
         action: STATE_SET "odd";
         target: "base";
      }
      program {
         signal: "elm,state,even"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_curved_vert_out.png";
            image.border: 2 2 0 0;
            image.middle: 0;
            fill.smooth: 0;
         }
      }
      part { name: "sel_shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shadow_rounded_vert.png";
            image.border: 9 9 0 0;
            rel1.offset: -6 0;
            rel2.offset: 5 -1;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_base"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
            fill.smooth: 0;
            visible: 0;
            TILED_HORIZ(120)
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_out.png";
            image.border: 2 2 2 2;
            image.middle: 0;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      program {
         signal: "elm,state,selected"; source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "sel_shadow";
         target: "sel_base";
         target: "sel_bevel";
      }
      program {
         signal: "elm,state,unselected"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sel_shadow";
         target: "sel_base";
         target: "sel_bevel";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
      }
      text { "elm.text";
         nomouse;
         effect: SHADOW BOTTOM;
         scale: 1;
         desc { "default";
            rel1.offset: 5 2;
            rel1.relative: 1.0 0;
            rel1.to_x: "elm.swallow.icon";
            rel2.offset: -7 -3;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "elm.swallow.end";
            color3: 0 0 0 128;
            color_class: "list_item";
            text { font: FN; size: 10;
               min: 1 1;
               ellipsis: -1;
               align: 0.5 0.5;
               text_class: "list_item";
            }
         }
         desc { "selected";
            inherit: "default";
            visible: 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
      part { name: "label2"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            color: 21 21 21 255;
            color3: 255 255 255 25;
            color_class: "list_item_disabled";
            text { font: FN; size: 10;
               text_source: "elm.text";
               align: 0.5 0.5;
               text_class: "list_item";
            }
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "label3"; type: TEXT; mouse_events: 0;
         effect: GLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -2 -3;
            rel1.to: "elm.text";
            rel2.offset: 1 1;
            rel2.to: "elm.text";
            color: COL_HI;
            color_class: "list_item_selected";
            text { font: FN; size: 10;
               text_source: "elm.text";
               align: 0.5 0.5;
               text_class: "list_item";
            }
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      program {
         signal: "elm,state,selected"; source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program {
         signal: "elm,state,unselected"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      image { "icon";
         scale: 1;
         desc { "default";
            fixed: 1 1;
            min: 15 15;
            align: 0 0.5;
            rel1.relative: 0.0 0.5;
            rel1.offset: 5 -1;
            rel2.relative: 0.0 0.5;
            rel2.offset: 5 -2;
            image.normal: "brows_logo.png";
         }
      }
      swallow { "elm.swallow.icon";
         scale: 1;
         desc { "default";
            fixed: 1 1;
            align: 0 0.5;
            rel1.relative: 0.0 0.5;
            rel1.offset: 5 -1;
            rel2.relative: 0.0 0.5;
            rel2.offset: 5 -2;
            min: 15 15;
         }
      }
      part { name: "sel_shine"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shine.png";
            rel1.offset: 0 -2;
            rel1.to: "sel_base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            rel2.to: "sel_base";
            visible: 0;
            FIXED_SIZE(69, 5)
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "event_block"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      swallow { "elm.swallow.end";
         repeat_events: 1;
         desc { "default";
            visible: 0;
            fixed: 1 1;
            min: 15 15;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            rel1.offset: 5 -3;
            rel1.relative: 1.0 0.0;
            rel2.offset: 0 -2;
         }
         desc { "selected";
            inherit: "default";
            visible: 1;
         }
      }
      program {
         signal: "elm,state,selected"; source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "sel_shine";
         target: "elm.swallow.end";
      }
      program {
         signal: "elm,state,unselected"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sel_shine";
         target: "elm.swallow.end";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event_block";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event_block";
      }
   }
}
ODD("elm/list/h_item_odd/enventor", "elm/list/h_item/enventor")
COMPRESS("elm/list/h_item_compress/enventor", "elm/list/h_item/enventor")
COMPRESS_ODD("elm/list/h_item_compress_odd/enventor", "elm/list/h_item/enventor")



group { name: "elm/scroller/base/enventor";
   images.image: "inset_shadow.png" COMP;
   images.image: "bevel_in.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "runner_horiz.png" COMP;
   images.image: "runner_vert.png" COMP;
   images.image: "runner_glow_horiz.png" COMP;
   images.image: "runner_glow_vert.png" COMP;
   images.image: "holes_tiny_horiz.png" COMP;
   images.image: "holes_tiny_vert.png" COMP;
   images.image: "holes_tiny_glow_horiz.png" COMP;
   images.image: "holes_tiny_glow_vert.png" COMP;
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "shadow_square_tiny.png" COMP;
   images.image: "glow_small.png" COMP;
   images.image: "sym_left_light_normal.png" COMP;
   images.image: "sym_right_light_normal.png" COMP;
   images.image: "sym_up_light_normal.png" COMP;
   images.image: "sym_down_light_normal.png" COMP;
   images.image: "sym_left_glow_normal.png" COMP;
   images.image: "sym_right_glow_normal.png" COMP;
   images.image: "sym_up_glow_normal.png" COMP;
   images.image: "sym_down_glow_normal.png" COMP;

   data.item: "focus_highlight" "on";

   parts {
      program {
         signal: "load"; source: "";
         script {
            emit("reload", "elm");
         }
      }
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
//            rel1.offset: -11 -11;
//            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 15 15;
            align: 1.0 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "sb_hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 99999;
         }
      }
      part { name: "sb_vbar_base"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "sb_vbar_p1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "elm.dragable.vbar";
         }
      }
      part { name: "sb_vbar_p2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "elm.dragable.vbar"; type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_vbar_a1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 0.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel2.to: "sb_vbar";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 0;
         }
      }
      part { name: "sb_vbar_a2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 1.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel1.offset: 0 -1;
            rel1.relative: 0.0 1.0;
            rel2.to: "sb_vbar";
         }
      }
      program {
         signal: "elm,action,show,vbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "elm,action,hide,vbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: STATE_SET "clicked" 0.0;
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: DRAG_VAL_STEP 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a1";
         action: STATE_SET "default" 0.0;
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: STATE_SET "clicked" 0.0;
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: DRAG_VAL_STEP 0.0 1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a2";
         action: STATE_SET "default" 0.0;
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
//            rel1.offset: -11 -11;
//            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 15 15;
            align: 0.0 1.0;
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "sb_vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 99999 0;
         }
      }
      part { name: "sb_hbar_base"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "sb_hbar_p1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "elm.dragable.hbar";
         }
      }
      part { name: "sb_hbar_p2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "elm.dragable.hbar"; type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_hbar_a1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel2.to: "sb_hbar";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -1;
         }
      }
      part { name: "sb_hbar_a2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel1.offset: -1 0;
            rel1.relative: 1.0 0.0;
            rel2.to: "sb_hbar";
         }
      }
      program {
         signal: "elm,action,show,hbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "elm,action,hide,hbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: STATE_SET "clicked" 0.0;
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: DRAG_VAL_STEP -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a1";
         action: STATE_SET "default" 0.0;
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: STATE_SET "clicked" 0.0;
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: DRAG_VAL_STEP 1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a2";
         action: STATE_SET "default" 0.0;
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
      }

      part { name: "bg"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
//            color: 64 64 64 200;
            color: 0 0 0 0;
            color_class: "scrollframe_base";
         }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.background"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.relative: 0.0 0.0;
            rel2.offset: -2 -2;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.relative: 0.0 0.0;
            rel2.offset: -2 -2;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "elm.swallow.overlay"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
      part { name: "runner_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            image.normal: "runner_vert.png";
            image.border: 0 0 2 2;
            rel1.to: "sb_vbar_base";
            rel2.to: "sb_vbar_base";
            fill.smooth: 0;
            min: 3 4;
            max: 3 99999;
         }
      }
      part { name: "runner_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            image.normal: "runner_horiz.png";
            image.border: 2 2 0 0;
            rel1.to: "sb_hbar_base";
            rel2.to: "sb_hbar_base";
            fill.smooth: 0;
            min: 4 3;
            max: 99999 3;
         }
      }
      part { name: "runner_vbar_clip"; type: RECT;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            min: 1 1;
            max: 1 99999;
            rel1.to: "runner_vbar";
            rel1.offset: 0 1;
            rel2.to: "runner_vbar";
            rel2.offset: -1 -2;
         }
      }
      part { name: "runner_hbar_clip"; type: RECT;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            min: 1 1;
            max: 99999 1;
            rel1.to: "runner_hbar";
            rel1.offset: 1 0;
            rel2.to: "runner_hbar";
            rel2.offset: -2 -1;
         }
      }

      part { name: "arrow1_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a1";
            rel2.to: "sb_vbar_a1";
            image.normal: "sym_up_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_glow_normal.png";
         }
      }
      part { name: "arrow2_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a2";
            rel2.to: "sb_vbar_a2";
            image.normal: "sym_down_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_glow_normal.png";
         }
      }
      part { name: "shadow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -2;
            rel1.to: "base_vbar";
            rel2.offset: 2 4;
            rel2.to: "base_vbar";
            image.normal: "shadow_square_tiny.png";
            image.border: 6 6 6 6;
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 1 1;
            color: 255 255 255 128;
         }
      }
      part { name: "glow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -3;
            rel1.to: "base_vbar";
            rel2.offset: 2 2;
            rel2.to: "base_vbar";
            image.normal: "glow_small.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "runner_glow_vbar"; mouse_events: 0;
         clip_to: "runner_vbar_clip";
         description { state: "default" 0.0;
            rel1.offset: 0 -30;
            rel1.to_x: "runner_vbar_clip";
            rel1.to_y: "base_vbar";
            rel2.offset: -1 29;
            rel2.to_x: "runner_vbar_clip";
            rel2.to_y: "base_vbar";
            image.normal: "runner_glow_vert.png";
            image.border: 0 0 33 33;
         }
      }
      part { name: "base_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 2 0;
            rel1.to: "elm.dragable.vbar";
            rel2.offset: -3 -1;
            rel2.to: "elm.dragable.vbar";
            image.normal: "vgrad_med_lighter.png";
            fill.smooth: 0;
            min: 3 13;
            TILED_HORIZ(120)
         }
      }
      part { name: "bevel_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_vbar";
            rel2.to: "base_vbar";
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
            min: 3 3;
         }
      }
      part { name: "center_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_vbar";
            rel2.to: "base_vbar";
            image.normal: "holes_tiny_vert.png";
            FIXED_SIZE(3, 11)
         }
      }
      part { name: "center_glow_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "center_vbar";
            rel2.to: "center_vbar";
            image.normal: "holes_tiny_glow_vert.png";
            FIXED_SIZE(11, 17)
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }

      part { name: "arrow1_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.to: "sb_hbar_a1";
            image.normal: "sym_left_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_left_glow_normal.png";
         }
      }
      part { name: "arrow2_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a2";
            rel2.to: "sb_hbar_a2";
            image.normal: "sym_right_light_normal.png";
            FIXED_SIZE(15, 15)
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_right_glow_normal.png";
         }
      }
      part { name: "shadow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -2;
            rel1.to: "base_hbar";
            rel2.offset: 2 4;
            rel2.to: "base_hbar";
            image.normal: "shadow_square_tiny.png";
            image.border: 6 6 6 6;
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -2 -2;
            rel2.offset: 1 1;
            color: 255 255 255 128;
         }
      }
      part { name: "glow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.offset: -3 -3;
            rel1.to: "base_hbar";
            rel2.offset: 2 2;
            rel2.to: "base_hbar";
            image.normal: "glow_small.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "runner_glow_hbar"; mouse_events: 0;
         clip_to: "runner_hbar_clip";
         description { state: "default" 0.0;
            rel1.offset: -30 0;
            rel1.to_x: "base_hbar";
            rel1.to_y: "runner_hbar_clip";
            rel2.offset: 29 -1;
            rel2.to_x: "base_hbar";
            rel2.to_y: "runner_hbar_clip";
            image.normal: "runner_glow_horiz.png";
            image.border: 33 33 0 0;
         }
      }
      part { name: "base_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 0 2;
            rel1.to: "elm.dragable.hbar";
            rel2.offset: -1 -3;
            rel2.to: "elm.dragable.hbar";
            image.normal: "vgrad_med_lighter.png";
            fill.smooth: 0;
            min: 13 3;
            TILED_HORIZ(120)
         }
      }
      part { name: "bevel_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_hbar";
            rel2.to: "base_hbar";
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
            min: 3 3;
         }
      }
      part { name: "center_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_hbar";
            rel2.to: "base_hbar";
            image.normal: "holes_tiny_horiz.png";
            FIXED_SIZE(11, 3)
         }
      }
      part { name: "center_glow_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "center_hbar";
            rel2.to: "center_hbar";
            image.normal: "holes_tiny_glow_horiz.png";
            FIXED_SIZE(17, 11)
            visible: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         target: "shadow_vbar";
         target: "glow_vbar";
         target: "center_glow_vbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "shadow_vbar";
         target: "glow_vbar";
         target: "center_glow_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         target: "shadow_hbar";
         target: "glow_hbar";
         target: "center_glow_hbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "shadow_hbar";
         target: "glow_hbar";
         target: "center_glow_hbar";
      }
   }
}

group { name: "elm/ctxpopup/bg/enventor";
   parts {
      part { name: "ctxpopup_bg";
         type: RECT;
         mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 15;
         }
      }
   }
   programs {
      program { name: "clicked_event";
         signal: "mouse,clicked,1";
         source: "ctxpopup_bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
      program { name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
   }
}

group { name: "elm/panes/vertical/enventor";
   images.image: "downlight_glow_left.png" COMP;
   images.image: "downlight_glow_right.png" COMP;
   parts {
      part { name: "whole"; type: SPACER;
         description { state: "default" 0.0;
         }
      }
      part { name: "right_constraint"; type: SPACER;
         dragable { confine: "whole";
            x: 1 1 1;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            max: 0 0;
         }
      }
      part { name: "left_constraint"; type: SPACER;
         dragable { confine: "whole";
            x: 1 1 1;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            max: 0 0;
         }
      }
      part { name: "left_bg"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.left";
            rel2.to: "elm.swallow.left";
            color: 0 0 0 175;
         }
      }
      part { name: "right_bg"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.right";
            rel2.to: "elm.swallow.right";
            color: 0 0 0 175;
         }
      }
      part { name: "sub_whole"; type: SPACER;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "left_constraint";
            rel2.relative: 0.0 1.0;
            rel2.to_x: "right_constraint";
         }
      }
      part { name: "whole_left"; type: RECT;
         description { state: "default" 0.0;
            rel2.to_x: "elm.bar";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "whole_right"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_x: "elm.bar";
            rel1.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.left"; type: SWALLOW;
         clip_to: "whole_left";
         description { state: "default" 0.0;
            rel2.to_x: "elm.bar";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.right"; type: SWALLOW;
         clip_to: "whole_right";
         description { state: "default" 0.0;
            rel1.to_x: "elm.bar";
            rel1.relative: 0.0 0.0;
         }
      }
      part { name: "elm.bar"; type: SPACER;
         dragable { confine: "sub_whole";
            x: 1 1 1;
            y: 0 0 0;
         }
         description { state: "default" 0.0;
            max: 0 99999;
            min: 0 14;
            fixed: 1 1;
            rel1.relative: 0.0 0.5;
            rel2.relative: 1.0 0.5;
         }
      }
      part { name: "elm.swallow.event"; type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            min: PANEMIN PANEMIN2;
            fixed: 1 1;
            rel1.to: "elm.bar";
            rel2.to: "elm.bar";
         }
      }
      part { name: "bar"; type: RECT;
         dragable.events: "elm.bar";
         description { state: "default" 0.0;
            min: PANEMIN PANEWID;
            max: 99999 99999;
            fixed: 1 1;
            rel1.to_x: "elm.swallow.event";
            rel1.relative: 0.0 0.25;
            rel2.to_x: "elm.swallow.event";
            rel2.relative: 1.0 0.75;
            color: 0 0 0 0;
         }
      }
      part { name: "glow1a"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "downlight_glow_left.png";
            image.border: 0 3 0 0;
            max: 32 99999;
            rel2.to_x: "elm.bar";
            color: 255 255 255 0;
            align: 1.0 0.5;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "glow1b"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "downlight_glow_right.png";
            max: 4 99999;
            rel1.to_x: "elm.bar";
            color: 255 255 255 0;
            align: 0.0 0.5;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "glow2a"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "downlight_glow_left.png";
            max: 4 99999;
            rel2.to_x: "elm.bar";
            color: 255 255 255 0;
            align: 1.0 0.5;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "glow2b"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "downlight_glow_right.png";
            image.border: 3 0 0 0;
            max: 32 99999;
            rel1.to_x: "elm.bar";
            color: 255 255 255 0;
            align: 0.0 0.5;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bar1"; type: RECT; repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "bar";
            rel2.to: "bar";
            rel2.relative: 0.5 1.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bar2"; type: RECT; repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "bar";
            rel1.relative: 0.5 0.0;
            rel2.to: "bar";
            color: 0 0 0 0;
         }
      }
   }
   programs {
      // for "press" smart callback
      program {signal: "mouse,down,1"; source: "bar";
         action: SIGNAL_EMIT "elm,action,press" "elm";
      }
      // for "unpress" smart callback
      program { signal: "mouse,up,1"; source: "bar";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
      }
      // for "clicked" smart callback
      program { signal: "mouse,clicked,1"; source: "bar";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      // for "clicked,double" smart callback
      program { signal: "mouse,down,1,double"; source: "bar";
         action: SIGNAL_EMIT "elm,action,click,double" "elm";
      }
      program {
         signal: "mouse,in"; source: "bar1";
         action: STATE_SET "active" 0.0;
         transition: BOUNCE 0.4 0.5 4;
         target: "glow1a";
         target: "glow1b";
      }
      program {
         signal: "mouse,out"; source: "bar1";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "glow1a";
         target: "glow1b";
      }
      program {
         signal: "mouse,in"; source: "bar2";
         action: STATE_SET "active" 0.0;
         transition: BOUNCE 0.4 0.5 4;
         target: "glow2a";
         target: "glow2b";
      }
      program {
         signal: "mouse,out"; source: "bar2";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "glow2a";
         target: "glow2b";
      }
   }
}

group { name: "elm/button/base/enventor";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      spacer { "base";
         desc { "default";
         }
      }
      rect { "icon_highlight";
         desc { "default";
         }
         //This status is for tools selected effect
         desc { "selected";
            inherit: "default" 0.0;
            color: 51 153 255 255;
         }
         desc { "clicked";
            inherit: "selected" 0.0;
         }
      }
      rect { "icon_clip";
         clip_to: "icon_highlight";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         scale: 1;
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 0 4;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.to: "base";
            min: 16 16;
            max: 16 16;
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 1 1;
            align: 0 0.5;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button_text";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      text { "elm.text"; nomouse;
         effect: GLOW;
         scale: 1;
         desc { "default";
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.to: "base";
            color: COL_HI;
            text { font: FN; size: 10;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button_anchor";
            }
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 0 0;
            color_class: "button_text_anchor_disabled";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color_class: "button_text_anchor_disabled";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
      }
      text { "text2"; nomouse;
         effect: GLOW;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            color: COL_HI;
            text { font: FN; size: 10;
               text_source: "elm.text";
               min: 1 1;
               ellipsis: -1;
               text_class: "button_anchor";
            }
            visible: 0;
         }
         desc { "clicked";
            inherit: "default";
            visible: 1;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "icon,highlight,enabled"; source: "";
         action: STATE_SET "selected" "0.0";
         target: "icon_highlight";
      }
      program {
         signal: "icon,highlight,disabled"; source: "";
         action: STATE_SET "default" "0.0";
         target: "icon_highlight";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "text2";
         target: "icon_highlight";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "text2";
         target: "icon_highlight";
      }
      program {
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "text2";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "text2";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/entry/cursor/enventor";
   min: 1 0;
   images.image: "white_bar_vert_glow.png" COMP;
   parts {
      part { name: "cursor"; mouse_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: -4 -4;
            rel2.offset: 3 3;
            image.normal: "white_bar_vert_glow.png";
            image.border: 4 4 4 4;
            fill.smooth: 0;
            color: 255 255 255 0;
            min: 9 10;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "cursor";
            rel2.to: "cursor";
            fixed: 1 1;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "selection,start"; source: "elm.text";
         action: STATE_SET "hidden" 0.0;
         target: "clipper";
      }
      program {
         signal: "selection,cleared"; source: "elm.text";
         action: STATE_SET "default" 0.0;
         target: "clipper";
      }
      program {
         signal: "elm,action,focus"; source: "elm";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_show";
      }
      program {
         signal: "elm,action,unfocus"; source: "elm";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_hide_stop";
      }
      program {
         signal: "elm,action,show,cursor"; source: "elm";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_show";
      }
      program { name: "cursor_hide_stop";
         action: STATE_SET "default" 0.0;
         target: "cursor";
      }
      program { name: "cursor_show";
         action: STATE_SET "visible" 0.0;
         target: "cursor";
         after: "cursor_show_timer";
      }
      program { name: "cursor_hide";
         action: STATE_SET "default" 0.0;
         target: "cursor";
         transition: SINUSOIDAL 0.2;
         after: "cursor_hide_timer";
      }
      program { name: "cursor_show_timer";
         in: 0.5 0.0;
         after: "cursor_hide";
      }
      program { name: "cursor_hide_timer";
         in: 0.2 0.0;
         after: "cursor_show";
      }
   }
}

group { name: "elm/entry/selection/enventor";
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color: 51 153 255 255;
         }
      }
   }
}

group { name: "elm/entry/anchor/enventor";
   images.image: "horizontal_separated_bar_small_glow.png" COMP;
   parts {
      part { name: "bar";
         description { state: "default" 0.0;
            image.normal: "horizontal_separated_bar_small_glow.png";
            image.border: 4 4 4 4;
            fill.smooth: 0;
            rel1.relative: 0.0 1.0;
            rel1.offset: -3 -5;
            rel2.offset: 2 4;
         }
      }
   }
}

group { name: "elm/entry/base/enventor";
   sounds {   
      sample { name: "key-tap1" LOSSY 64;
         source: "kbd-tap.wav";
      }
      sample { name: "key-tap2" LOSSY 64;
         source: "kbd-tap2.wav";
      }
      sample { name: "key-tap3" LOSSY 64;
         source: "kbd-tap3.wav";
      }
      sample { name: "key-tap4" LOSSY 64;
         source: "kbd-tap4.wav";
      }
      sample { name: "key-tap5" LOSSY 64;
         source: "kbd-tap5.wav";
      }
   }

   styles {
      style { name: "entry_style";
         base: "font="FN" font_size=10 color=#ffffff style=shadow,bottom shadow_color=#00000080 wrap=word text_class=enventor_entry color_class=enventor_entry left_margin=2 right_margin=2 tabstops=10";
         ENABLED_TEXTBLOCK_TAGS
      }
      style { name: "entry_nowrap_style";
         base: "font="FN" font_size=10 color=#ffffff style=shadow,bottom shadow_color=#00000080 text_class=enventor_entry color_class=enventor_entry left_margin=2 right_margin=2 tabstops=10";
         ENABLED_TEXTBLOCK_TAGS
      }
      style { name: "entry_disabled_style";
         base: "font="FN" font_size=10 color=#151515 style=shadow,bottom shadow_color=#ffffff19 wrap=word text_class=enventor_entry color_class=enventor_entry_disabled left_margin=2 right_margin=2 tabstops=10";
         DISABLED_TEXTBLOCK_TAGS
      }
      style { name: "entry_nowrap_disabled_style";
         base: "font="FN" font_size=10 color=#151515 style=shadow,bottom shadow_color=#ffffff19 text_class=enventor_entry color_class=enventor_entry_disabled left_margin=2 right_margin=2 tabstops=10";
         DISABLED_TEXTBLOCK_TAGS
      }
      style { name: "entry_guide_style";
         base: "font="FN" font_size=10 color=#000000 style=shadow,bottom shadow_color=#ffffff19 wrap=word text_class=enventor_entry color_class=enventor_entry_guide left_margin=2 right_margin=2 ellipsis=0.0 tabstops=10";
         DISABLED_TEXTBLOCK_TAGS
      }
   }
//   data.item: "context_menu_orientation" "horizontal";
   parts {
      part { name: "elm.guide"; type: TEXTBLOCK; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text { style: "entry_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text"; type: TEXTBLOCK;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: DEFAULT;
//         select_mode: EXPLICIT;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/enventor"; // selection under
//         source2: "X"; // selection over
//         source3: "X"; // cursor under
         source4: "elm/entry/cursor/enventor"; // cursorover
//         source5: "elm/entry/anchor/enventor"; // anchor under
         source6: "elm/entry/anchor/enventor"; // anchor over
         description { state: "default" 0.0;
            /* we gotta use 0 0 here, because of scrolled entries */
            fixed: 0 0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            text { style: "entry_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text { style: "entry_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program {
         signal: "load"; source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program {
         signal: "elm,guide,disabled"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program {
         signal: "elm,guide,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "key-down";
         signal: "entry,keydown"; source: "elm.text";
         script {
            new buf[32];
            snprintf(buf, 31, "key-down%i", (rand() % 5) + 1);
            run_program(get_program_id(buf));
         }
      }
      program { name: "key-down1";
         action: PLAY_SAMPLE "key-tap1" 1.0;
      }
      program { name: "key-down2";
         action: PLAY_SAMPLE "key-tap2" 1.0;
      }
      program { name: "key-down3";
         action: PLAY_SAMPLE "key-tap3" 1.0;
      }
      program { name: "key-down4";
         action: PLAY_SAMPLE "key-tap4" 1.0;
      }
      program { name: "key-down5";
         action: PLAY_SAMPLE "key-tap5" 1.0;
      }
   }
}

group { name: "elm/entry/base-nowrap/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.guide"; type: TEXTBLOCK; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text { style: "entry_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         description { state: "default" 0.0;
            text { style: "entry_nowrap_style";
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text { style: "entry_nowrap_disabled_style";
               min: 0 1;
            }
         }
      }
   }
}

group { name: "elm/entry/base-nowrap-noedit/enventor";
   inherit: "elm/entry/base/enventor";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source6: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            text { style: "entry_style";
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text { style: "entry_disabled_style";
            }
         }
      }
   }
}

group { name: "elm/entry/base/enventor_setting";
   inherit: "elm/entry/base/enventor";
   styles {
      style { name: "setting_entry_style";
         base: "font="FN" font_size=10 color=#ffffff style=shadow,bottom shadow_color=#00000080 wrap=word text_class=enventor_setting_entry color_class=enventor_setting_entry left_margin=2 right_margin=2";
         ENABLED_TEXTBLOCK_TAGS
      }
      style { name: "setting_entry_disabled_style";
         base: "font="FN" font_size=10 color=#151515 style=shadow,bottom shadow_color=#ffffff19 wrap=word text_class=enventor_setting_entry color_class=enventor_setting_entry_disabled left_margin=2 right_margin=2";
         DISABLED_TEXTBLOCK_TAGS
      }
      style { name: "setting_entry_guide_style";
         base: "font="FN" font_size=10 color=#000000 style=shadow,bottom shadow_color=#ffffff19 wrap=word text_class=enventor_setting_entry color_class=enventor_setting_entry_guide left_margin=2 right_margin=2 ellipsis=0.0";
         DISABLED_TEXTBLOCK_TAGS
      }
   }
//   data.item: "context_menu_orientation" "horizontal";
   parts {
      part { name: "elm.guide"; type: TEXTBLOCK; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text { style: "setting_entry_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/entry/base-nowrap-noedit/enventor_setting";
   inherit: "elm/entry/base/enventor_setting";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source: "elm/entry/selection/enventor"; // selection under
         source4: ""; // cursorover
         source6: "elm/entry/anchor/enventor"; // anchor under
         description { state: "default" 0.0;
            text { style: "setting_entry_style";
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text { style: "setting_entry_disabled_style";
            }
         }
      }
   }
}

